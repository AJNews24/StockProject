# FROM MAIN.PY
from settings import *
from sprites import *
#AN
screen = pygame.display.set_mode((WIDTH, HEIGHT))
# BV = Bryan V 
# AN =Andrew Nieuwsma 

#AN 
# GAME LOOP
running = True
while running:
    #  keep loop running at the right speed
    clock.tick(FPS)
#GAME RENDERING
screen.fill(BLUE)
    screen.blit(background, background_rect)
    all_sprites.draw(screen)
    draw_text(screen, str(totalPoints), 34, WIDTH/2, 10)
    draw_shield_bar(screen, 10, 10, player.start_shield, player.shield)
    draw_lives(screen, WIDTH - 100, 5, player.lives)
#bv
class Game:
    def __init__(self):
        # initialize game window, etc
        pg.init()
        pg.mixer.init()
        self.screen = pg.display.set_mode((WIDTH, HEIGHT))
        pg.display.set_caption(TITLE)
        self.clock = pg.time.Clock()
        self.running = True

    def new(self):
        # start a new game
        self.all_sprites = pg.sprite.Group()
        self.player = Player()
        self.all_sprites.add(self.player)
        self.run()

    def run(self):
        # Game Loop
        self.playing = True
        while self.playing:
            self.clock.tick(FPS)
            self.events()
            self.update()
            self.draw()

    def update(self):
        # Game Loop - Update
        self.all_sprites.update()

    def events(self):
        # Game Loop - events
        for event in pg.event.get():
            # check for closing window
            if event.type == pg.QUIT:
                if self.playing:
                    self.playing = False
                self.running = False

    def draw(self):
        # Game Loop - draw
        self.screen.fill(BLACK)
        self.all_sprites.draw(self.screen)
        # *after* drawing everything, flip the display
        pg.display.flip()

    def show_start_screen(self):
        # game splash/start screen
        pass

    def show_go_screen(self):
        # game over/continue
        pass

screen.fill = 

g = Game()
g.show_start_screen()
while g.running:
    g.new()
    g.show_go_screen()

pg.quit()


###########FROM SEPERATE FOLDER sprites.py
#AN 
import pygame as pg 
from settings import * 
class Player(pg.sprite.Sprite):
    def __int__(self):
        pg.sprite.Sprite.__int__(self)
        self.image = pygame.Surface((30,40))
        self.image.fill(GREEN)
        self.rect = self.image.get_rect()
        self.vx = 0 
        self.vy = 0 

    def update(self):
        self.vx = 0 
        keys = pg.keys.get_pressed()
        if keys[pg.K_LEFT]:
            self.vx = -5
        if keys[pg.K_RIGHT]:
            self.vx = 5
        
        self.rect.x += self.vx
        self.rect.y += self.vy
        
   #####################################FROM SEPERATE FOLDER settings.py
   # BV
TITLE = "	Jump Commando!"
WIDTH = 480
HEIGHT = 600
FPS = 60
	
	# define colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
RED = (255, 0, 0)
GREEN = (0, 255, 0)
BLUE = (0, 0, 255)
YELLOW = (255, 255, 0)
